name: Build and Deploy
on:
  push:
    branches:
      - main
      - master
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    # NOTE: Python is necessary for the pre-rendering (minification) step
    - name: Install python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    # NOTE: Here you can install dependencies such as matplotlib if you use
    # packages such as PyPlot.
    - run: pip install matplotlib

    - name: Install Julia
      uses: julia-actions/setup-julia@v1
      with:
        version: 1.8.4

    # We set up a folder that Pluto can use to cache exported notebooks. If the notebook file did not change, then Pluto can take the exported file from cache instead of running the notebook.
    - name: Set up notebook state cache
      uses: actions/cache@v2
      with:
        path: pluto_state_cache
        key: ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('**/Project.toml', '**/Manifest.toml', '.github/workflows/*' ) }}-${{ hashFiles('**/*jl') }}
        restore-keys: |
             ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('**/Project.toml', '**/Manifest.toml', '.github/workflows/*' ) }}

    # NOTE
    #   The steps below ensure that NodeJS and Franklin are loaded then it
    #   installs highlight.js which is needed for the prerendering step
    #   (code highlighting + katex prerendering).
    #   Then the environment is activated and instantiated to install all
    #   Julia packages which may be required to successfully build your site.
    #   The last line should be `optimize()` though you may want to give it
    #   specific arguments, see the documentation or ?optimize in the REPL.
    - run: |
        julia --color=yes -e '
            using Pkg; Pkg.activate("."); Pkg.instantiate();

            import PlutoSliderServer
            PlutoSliderServer.github_action("homework";
               Export_cache_dir="pluto_state_cache",
               Export_create_index=false);

            PlutoSliderServer.github_action("notes";
               Export_cache_dir="pluto_state_cache",
               Export_create_index=false);

            using NodeJS; run(`$(npm_cmd()) install highlight.js@10.7`);
            using Franklin;
            optimize(prepath="/ubc-cpsc-406/", minify=false)
            '
      env: 
          # Allows the use of unicode characters in Plots.jl
          GKS_ENCODING: "utf8"
          # Fixes 'GKS: can't connect to GKS socket application' errors
          # and quality of output plots in GR back end.
          GKSwstype: "100"
    - name: Build and Deploy
      if: ${{ !env.ACT }}
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages
        FOLDER: __site
        clean: true
        single_commit: true

